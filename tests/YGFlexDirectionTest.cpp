/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @Generated by gentest/gentest.rb from gentest/fixtures/BNDYGFlexDirectionTest.html

#include <gtest/gtest.h>
#include <bindyoga/BindYoga.h>

TEST(YogaTest, flex_direction_column_no_height) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(30, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(30, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, flex_direction_row_no_width) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(30, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(30, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, flex_direction_column) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, flex_direction_row) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(90, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(80, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(70, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, flex_direction_column_reverse) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionColumnReverse);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetHeight(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(90, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(80, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(70, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(90, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(80, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(70, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, flex_direction_row_reverse) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRowReverse);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child0, 10);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child1, 10);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child2, 10);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(90, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(80, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(70, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(20, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(10, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}
