/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @Generated by gentest/gentest.rb from gentest/fixtures/BNDYGDisplayTest.html

#include <gtest/gtest.h>
#include <bindyoga/BindYoga.h>

TEST(YogaTest, display_none) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child0, 1);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child1, 1);
  BNDYGNodeStyleSetDisplay(root_child1, BNDYGDisplayNone);
  BNDYGNodeInsertChild(root, root_child1, 1);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, display_none_fixed_size) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child0, 1);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetWidth(root_child1, 20);
  BNDYGNodeStyleSetHeight(root_child1, 20);
  BNDYGNodeStyleSetDisplay(root_child1, BNDYGDisplayNone);
  BNDYGNodeInsertChild(root, root_child1, 1);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, display_none_with_margin) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetMargin(root_child0, BNDYGEdgeLeft, 10);
  BNDYGNodeStyleSetMargin(root_child0, BNDYGEdgeTop, 10);
  BNDYGNodeStyleSetMargin(root_child0, BNDYGEdgeRight, 10);
  BNDYGNodeStyleSetMargin(root_child0, BNDYGEdgeBottom, 10);
  BNDYGNodeStyleSetWidth(root_child0, 20);
  BNDYGNodeStyleSetHeight(root_child0, 20);
  BNDYGNodeStyleSetDisplay(root_child0, BNDYGDisplayNone);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child1, 1);
  BNDYGNodeInsertChild(root, root_child1, 1);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, display_none_with_child) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child0, 1);
  BNDYGNodeStyleSetFlexShrink(root_child0, 1);
  BNDYGNodeStyleSetFlexBasisPercent(root_child0, 0);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child1, 1);
  BNDYGNodeStyleSetFlexShrink(root_child1, 1);
  BNDYGNodeStyleSetFlexBasisPercent(root_child1, 0);
  BNDYGNodeStyleSetDisplay(root_child1, BNDYGDisplayNone);
  BNDYGNodeInsertChild(root, root_child1, 1);

  const BNDYGNodeRef root_child1_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child1_child0, 1);
  BNDYGNodeStyleSetFlexShrink(root_child1_child0, 1);
  BNDYGNodeStyleSetFlexBasisPercent(root_child1_child0, 0);
  BNDYGNodeStyleSetWidth(root_child1_child0, 20);
  BNDYGNodeStyleSetMinWidth(root_child1_child0, 0);
  BNDYGNodeStyleSetMinHeight(root_child1_child0, 0);
  BNDYGNodeInsertChild(root_child1, root_child1_child0, 0);

  const BNDYGNodeRef root_child2 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child2, 1);
  BNDYGNodeStyleSetFlexShrink(root_child2, 1);
  BNDYGNodeStyleSetFlexBasisPercent(root_child2, 0);
  BNDYGNodeInsertChild(root, root_child2, 2);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1_child0));

  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child2));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child2));
  ASSERT_FLOAT_EQ(50, BNDYGNodeLayoutGetWidth(root_child2));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child2));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}

TEST(YogaTest, display_none_with_position) {
  const BNDYGConfigRef config = BNDYGConfigNew();

  const BNDYGNodeRef root = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexDirection(root, BNDYGFlexDirectionRow);
  BNDYGNodeStyleSetWidth(root, 100);
  BNDYGNodeStyleSetHeight(root, 100);

  const BNDYGNodeRef root_child0 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child0, 1);
  BNDYGNodeInsertChild(root, root_child0, 0);

  const BNDYGNodeRef root_child1 = BNDYGNodeNewWithConfig(config);
  BNDYGNodeStyleSetFlexGrow(root_child1, 1);
  BNDYGNodeStyleSetPosition(root_child1, BNDYGEdgeTop, 10);
  BNDYGNodeStyleSetDisplay(root_child1, BNDYGDisplayNone);
  BNDYGNodeInsertChild(root, root_child1, 1);
  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionLTR);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeCalculateLayout(root, BNDYGUndefined, BNDYGUndefined, BNDYGDirectionRTL);

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, BNDYGNodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(0, BNDYGNodeLayoutGetHeight(root_child1));

  BNDYGNodeFreeRecursive(root);

  BNDYGConfigFree(config);
}
